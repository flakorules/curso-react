{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","x","GifExpertApp","categories","setcategories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,eAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAarC,OACI,sBAAMC,SANW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAWL,GAAX,mBAAyBK,QAIvC,SACI,uBACIC,KAAK,OACLC,MAAOP,EACPQ,SAdc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,a,QCEhBG,EAVK,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC3B,OACI,sBAAKC,UAAU,uBAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,0FAE6EO,UAAUF,GAFvF,qBAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAGFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAZvB,kBAgBZY,GAhBY,4CAAH,sDCwBLK,EApBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEZnB,mBAAS,CAE/ByB,KAAM,GACNO,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OATAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GAAI,OAAGH,EAAS,CAClBT,KAAKY,EACLL,SAAQ,SAGd,CAACb,IAEIc,EDfgBK,CAAanB,GAA7BM,EAFqB,EAErBA,KAFqB,EAEhBO,QACZ,OACI,qCACA,6BAAKb,IAEL,qBAAKJ,UAAU,YAAf,SACMU,EAAKE,KAAI,SAACY,GACR,OAAO,cAAC,EAAD,eAECA,GADCA,EAAE3B,aEeZ4B,EAxBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,cAFvB,mBAEhByC,EAFgB,KAEJC,EAFI,KAIvB,OACI,qCACI,+CACA,cAAC,EAAD,CAAa3C,cAAe2C,IAC5B,uBACA,6BAEQD,EAAWd,KAAK,SAACR,EAAUwB,GAAX,OACZ,cAAC,EAAD,CAEAxB,SAAUA,GADLA,Y,MCZ7ByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a0ca35ca.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('Hola tereso');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories((cats) => [inputValue,...cats]);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem \r\n","export const getGifs = async (category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=CFc863H0h8u4kgHoUwZwv4qeaG8ZkchM&q=${ encodeURI(category)}&limit=6`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id, \r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n        <h1>{category}</h1>\r\n\r\n        <div className=\"card-grid\">\r\n             {data.map((x) => { \r\n                return <GifGridItem \r\n                    key={x.id}\r\n                    {...x} />\r\n                })\r\n            }\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true,\r\n        \r\n    });\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs=> setstate({\r\n            data:imgs,\r\n            loading:false\r\n        }));\r\n      \r\n    },[category]);\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './Components/AddCategory';\r\nimport GifGrid from './Components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertAppp</h2>\r\n            <AddCategory setCategories={setcategories}/>\r\n            <hr/>\r\n            <ul>\r\n                {\r\n                    categories.map( (category, i) => \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                    )\r\n                }\r\n            </ul>       \r\n\r\n            \r\n        </>);\r\n\r\n};\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}